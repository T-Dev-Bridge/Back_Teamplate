server:
  port:

spring:
  cloud:
    config:
      name: admin
    openfeign:
      loadbalancer:
        ribbon:
          enable: false
  application:
    name: core
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${db.ip}:${db.port}/${db.database}?currentSchema=${db.schema}
    username: ${db.username}
    password: ${db.password}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    properties:
      hibernate:
        format_sql: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

  health:
    diskspace:
      enabled: false
    circuitbreakers:
      enabled: true

  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        resilience4j.circuitbreaker.calls: true

# Resilience4j
resilience4j.retry:
  configs:
    default:
      maxAttempts: 3 # 최대 3번 재시도
      waitDuration: 1000 # 재시도 사이 간격 (1초)
      retryExceptions:
        - com.bridge.template.exception.RecordException # 해당 Exception이 발생하면 재시도
      ignoreExceptions:
        - com.bridge.template.exception.IgnoreException # 해당 Exception이 발생하면 재시도하지 않음
  instances:
    simpleRetryConfig:
      baseConfig: default

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowType: COUNT_BASED
      minimumNumberOfCalls: 7 # 최소 7번까지 CLOSE로 가정하고 호출
      slidingWindowSize: 10 # 10개의 요청을 기준으로 판단
      waitDurationInOpenState: 10s # 10초 뒤에 OPEN 상태에서 HALF_OPEN으로
      failureRateThreshold: 40 # slidingWindowSize 중 40%가 recordException이면 OPEN
      slowCallDurationThreshold: 3000 # 3초 동안 요청이 처리되지 않으면 실패로 간주
      slowCallRateThreshold: 60 # slidingWindowSize 중 60%가 slowCall이면 OPEN
      permittedNumberOfCallsInHalfOpenState: 5 # ALF_OPEN 상태에서 5번까지 CLOSE로 변경하기 위한 호출
      automaticTransitionFromOpenToHalfOpenEnabled: true # OPEN 상태에서 자동으로 HALF_OPEN으로 변경
      eventConsumerBufferSize: 10 # actuator를 위한 이벤트 버퍼 사이즈
      recordExceptions:
        - com.bridge.template.exception.RecordException
      ignoreExceptions:
        - com.bridge.template.exception.IgnoreException
  instances:
    basicCircuitBreakerConfig:
      baseConfig: default


db:
  ip: localhost
  port: 5432
  database: postgres
  username: postgres
  password: 123456a
  schema: admin

